package jiegouxing.day04composite;

/**
 * 组合模式：
 *        把部分和整体的关系用树形结构来表示，从而使客户端可以使用统一的
 *        方式来处理部分对象和整体对象。
 *
 * 核心：
 *     --抽象构件角色（Component）:定义叶子和容器构件的共同点
 *     --叶子构件角色（Leaf）:无子节点
 *     --容器构件角色（Composite）:有容器特征，可以包含子节点
 *
 * 工作流程分析：
 *           --组合模式为处理树形结构提供了完美的解决方案，描述了如何将容器中的叶子进行递归组合，
 *             使得用户在使用的时候可以一致的对待容器和叶子。
 *
 *           --当容器对象的方法被调用时，将遍历整个树形结构，寻找也包含这个方法的成员，并调用执行，
 *             其中使用了递归调用的机制对整个结构进行处理。
 *
 * 开发中的应用场景：
 *              --XML文件解析
 *              --junit单元测试
 *
 * @author HuYang
 * @date 2019-11-01 14:26
 */
public class Info {
}
